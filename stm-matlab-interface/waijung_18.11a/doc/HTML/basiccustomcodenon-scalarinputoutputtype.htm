<!DOCTYPE HTML>
<html>
<head>
   <title>STM32F4 Target &gt; Demos &gt; Waijung Demos &gt; Basic Custom Code (Non-Scalar Signals)</title>
   <meta name="generator" content="Help & Manual">
   <meta name="keywords" content="">
   <meta name="description" content="Basic Custom Code (Non -Scalar Signals)">
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="X-UA-Compatible" content="IE=edge" />
   <link type="text/css" href="default.css" rel="stylesheet">
   <link type="text/css" href="custom.css" rel="stylesheet">
   <script type="text/javascript" src="nsh.js"></script>

<script type="text/javascript">   
// Toggle Toggler 

var toggleCount=false;
var switchState;

function toggleToggles() {

    if (!toggleCount) {
     toggleCount = true;
     HMToggleExpandAll(true);
     switchState = true;
     }
   
     else if (switchState) {
        HMToggleExpandAll(false);
        switchState = false;
        }
        
     else  {
        HMToggleExpandAll(true);
        switchState = true;
        } 
    }
</script>
   
<!-- non-scrolling headers for CHM and browser-based help, local styles-->
<style type="text/css" media="screen"> 
html, body { margin:0; 
   padding:0; 
   overflow: hidden; 
   background: #FFFFFF; 
  }
 
div#printheader { 
   display: none;
   padding-bottom: 10px;
   }
   #idheader { 
      width:100%; 
      height:auto; 
      padding: 0; 
      margin: 0; 
} 
    #idheaderbg  {
    background: #6F6F6F; 
}
   #callout-table, #overview-table {display:block; position:relative; top:0; left:0;}
   #callout-icon {display:block; position:absolute; top:-11px; left:-11px;}
   #callout-icon-flag {display:block; position:absolute; top:-11px; left:-8px;}
   #callout-table a {text-decoration: none; color: blue;}
   #callout-table a:visited {text-decoration: none; color: blue;}
   #overview-table a {text-decoration: none; color: black;}
   #overview-table a:visited {text-decoration: none; color: black;}
   #callout-table a:hover, #overview-table a:hover {text-decoration: underline;}
   p.help-url { margin: 20px 0 5px 0; text-align: center; font-size: 80%; text-decoration: none }
   .sync-toc { color: #ffffff; font-size: 8pt; font-weight: bold; display: none; }
   .sync-toc a { color: #ffffff; text-decoration: none; font-weight: bold;}
   .sync-toc a:visited { color: #ffffff; }
   .sync-toc a:hover { text-decoration: underline; }
   </style>
<!--[if lt IE 7]>
<style type="text/css">
  #idcontent {padding: 0px;} 
  #innerdiv {padding: 10px 5px 5px 10px ;} 
</style> 
<![endif]-->
<noscript>
<style type="text/css">
html, body { overflow: auto; }
</style> 
</noscript>
<style type="text/css" media="print">
span.f_Heading1 { color: black; }
#idheader, #printheader img { display:none; }
#printheader { display: block; margin-top: 20px; }
#idcontent { margin-top: 10px; }
</style>   
   <script type="text/javascript" src="jquery.js"></script>
   <script type="text/javascript" src="helpman_settings.js"></script>
   <script type="text/javascript" src="helpman_topicinit.js"></script>

   <script type="text/javascript">
     HMSyncTOC("index.htm", "basiccustomcodenon-scalarinputoutputtype.htm");
   </script>
   <script type="text/javascript" src="highlight.js"></script>
   <script type="text/javascript">
     $(document).ready(function(){highlight();});
   </script>
</head>
<body>
<!--ZOOMSTOP-->


<div id="printheader"><h1 class="p_Heading1"><span class="f_Heading1">Basic Custom Code (Non -Scalar Signals)</span></h1>
</div> 
<div id="idheader">
<div id="idheaderbg">
<table width="100%" border="0" cellspacing="0" cellpadding="0" 
       style="margin: 0px; background: url(header_bg.jpg);">

  <tr valign="bottom">
    <td align="left" valign="bottom" class="topichead">
   <p class="sync-toc">&lt;&lt; <a rel="nofollow" href="index.htm?basiccustomcodenon-scalarinputoutputtype.htm" target="_top">Click to Display Table of Contents</a> &gt;&gt;</p>
   <p class="crumbs" id="idnav"><b>Navigation:</b>&nbsp;
   
   <a href="stm32f4_target_block_ref.htm">STM32F4 Target</a> &gt; <a href="demo_home.htm">Demos</a> &gt; <a href="waijung_demos.htm">Waijung Demos</a>&nbsp;&gt;</p>
   <h1 class="p_Heading1"><span class="f_Heading1">Basic Custom Code (Non -Scalar Signals)</span></h1>

    </td>
    <td align="right" width="120" valign="middle" class="topichead" id="idnav">
    
     <a href="basic_custom_code.htm"
        onmouseover="document.images.prev.src='btn_prev_h.gif'" 
        onmouseout="document.images.prev.src='btn_prev_n.gif'"
        ><img name=prev src="btn_prev_n.gif" border=0 alt="Previous page"
        ></a><a href="waijung_demos.htm"
        onmouseover="document.images.main.src='btn_home_h.gif'" 
        onmouseout="document.images.main.src='btn_home_n.gif'"><img name=main src="btn_home_n.gif" border=0 alt="Return to chapter overview"
        ></a><a href="uart_wifi_customcodedemo.htm"
        onmouseover="document.images.next.src='btn_next_h.gif'" 
        onmouseout="document.images.next.src='btn_next_n.gif'"><img name=next src="btn_next_n.gif" border=0 alt="Next page"
        ></a>
    </td>
  </tr>
  <tr><td colspan="2" style="height: 3px; background: url(header_bg_shadow.gif)"></td></tr>
</table>
</div>

<!-- The following code displays Expand All/Collapse All links  below the header in topics containing toggles -->
  

</div>  



<div id="idcontent"><div id="innerdiv"> 
<!--ZOOMRESTART-->
<p><span style="font-weight: bold;">demo File</span>: stm32f4_matrix_customcode_demo.mdl</p>
<p><img src="stm32f4_matrix_customcode_demo.png" width="950" height="734" alt="stm32f4_matrix_customcode_demo" style="width:950px;height:734px;border:none" /></p>
<p>&nbsp;</p>
<h2 class="p_Heading2"><span class="f_Heading2">Description</span></h2>
<p>This example demonstrates how to use the <a href="waijung_basic_customcode.htm" class="topiclink">Basic Custom Code Block</a>. </p>
<p>Input In1 is of type double and size 3x3. The content of this matrix is displayed on the first line of a character LCD.</p>
<p>The 1st, 2nd, 8th, and 9th member of In1 are swapped and displayed on the second line the the character LCD.</p>
<p>Out3 (Add) is computed from In2 (Constant1) and In3 (Factor). The result is displayed on the third line of the character LCD.</p>
<p>The vector int16([1 2 3 4 5 6 7 8 9]) In4 &nbsp;is subtracted by 1, outputted and displayed on the forth line of the character LCD.</p>
<p>The results are shown below.</p>
<p><img src="matrix_customcode_demo.png" width="950" height="328" alt="matrix_customcode_demo" style="width:950px;height:328px;border:none" /></p>
<h2 class="p_Heading2"><span class="f_Heading2">Software Setup</span></h2>
<p>1. In this example there are two custom code files: <span style="font-weight: bold;">stm32f4_matrix_customcode.h</span> and <span style="font-weight: bold;">stm32f4_matrix_customcode.c</span> as shown below.</p>
<p><img src="stm32f4_matrix_customcode_h.png" width="1406" height="317" alt="stm32f4_matrix_customcode_h" style="width:1406px;height:317px;border:none" /></p>
<p>&nbsp;</p>
<p><img src="stm32f4_matrix_customcode_c.png" width="1384" height="684" alt="stm32f4_matrix_customcode_c" style="width:1384px;height:684px;border:none" /></p>
<p>&nbsp;</p>
<p>2. &quot;Basic Custom Code&quot; block is configured as shown.</p>
<p><img src="matrix_basic_custom_code_mask_demo.png" width="950" height="900" alt="matrix_basic_custom_code_mask_demo" style="width:950px;height:900px;border:none" /></p>
<p>&nbsp;</p>
<p>3. The Custom Code Block code generation mechanism uses your configuration information in the Custom Code Block mask above to create corresponding &quot;<span style="font-weight: bold; color: #ff0000;">function wrapper</span>&quot; in the <span style="font-weight: bold;">model_step() function</span> and the <span style="font-weight: bold;">waijung_hwdrvlib.h</span> and <span style="font-weight: bold;">waijung_hwdrvlib.c </span>functions as described in the <a href="basic_custom_code.htm" class="topiclink">Basic Custom Code Demo</a>. The differences are in declaration and syntax of input / output parameters of non-scalar signal as follows.</p>
<p>&nbsp;</p>
<p>The following show an example code from <span style="font-weight: bold;">waijung_hwdrvlib.h</span> for the output function. Notice the use of <span style="font-weight: bold;">const</span> keyword and <span style="font-weight: bold;">pointer</span> for non-scalar input signal.</p>
<p>&nbsp;</p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: 'Courier New'; color: #228b22;">/*</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: 'Courier New'; color: #228b22;"> * Custom Code Block Output Function</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: 'Courier New'; color: #228b22;"> * Block: &lt;Root&gt;/Basic Custom Code</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: 'Courier New'; color: #228b22;"> * BlockID: BasicCustomCode</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: 'Courier New'; color: #228b22;"> *</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: 'Courier New'; color: #228b22;"> * Input Port Definitions</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: 'Courier New'; color: #228b22;"> * in1: Port label 'In1', Type: real_T, Size: 9 elements, nRows x nCols: 3 x 3</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: 'Courier New'; color: #228b22;"> * in2: Port label 'In2', Type: int8_T, Size: 1 elements, nRows x nCols: 1 x 1</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: 'Courier New'; color: #228b22;"> * in3: Port label 'In3', Type: int8_T, Size: 1 elements, nRows x nCols: 1 x 1</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: 'Courier New'; color: #228b22;"> * in4: Port label 'In4', Type: int16_T, Size: 9 elements, nRows x nCols: 9 x 1</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: 'Courier New'; color: #228b22;"> * Output Port Definitions</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: 'Courier New'; color: #228b22;"> * out1: Port label 'Rearrange', Type: uint8_T, Size: 9 elements, nRows x nCols: 9 x 1</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: 'Courier New'; color: #228b22;"> * out2: Port label 'Add', Type: int8_T, Size: 1 elements, nRows x nCols: 1 x 1</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: 'Courier New'; color: #228b22;"> * out3: Port label 'Substract', Type: real_T, Size: 9 elements, nRows x nCols: 9 x 1</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: 'Courier New'; color: #228b22;"> *</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: 'Courier New'; color: #228b22;"> * Remark</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: 'Courier New'; color: #228b22;"> * Matlab uses one dimensional array to store 2D (Matrix) signal data, by stacking each column of the matrix to form a vector.</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: 'Courier New'; color: #228b22;"> * Example:</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: 'Courier New'; color: #228b22;"> * In Matlab, A = [1 4 7; 2 5 8; 3 6 9].</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: 'Courier New'; color: #228b22;"> * In C, A = [1 2 3 4 5 6 7 8 9].</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: 'Courier New'; color: #228b22;"> */</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: 'Courier New'; color: #0000ff;">void</span><span style="font-size: 10pt; font-family: 'Courier New';"> output_BasicCustomCode( </span><span style="font-size: 10pt; font-family: 'Courier New'; color: #0000ff;">const</span><span style="font-size: 10pt; font-family: 'Courier New';"> real_T *in1,int8_T in2,int8_T in3, </span><span style="font-size: 10pt; font-family: 'Courier New'; color: #0000ff;">const</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: 'Courier New';"> &nbsp;int16_T *in4 ,uint8_T *out1,int8_T *out2,real_T *out3);</span></p>
<p>&nbsp;</p>
<h2 class="p_Heading2"><span class="f_Heading2">Hardware Setup</span></h2>
<p>STM32F4DISCOVERY board</p>
<p><a href="https://www.aimagin.com/amg-clcd-2.html" target="_blank" onclick="return HMTrackTopiclink(this);" class="weblink">aMG CLCD 2</a></p>

<!--ZOOMSTOP-->
</div></div>
<script type="text/javascript">

var lastSlashPos = document.URL.lastIndexOf("/") > document.URL.lastIndexOf("\\") ? document.URL.lastIndexOf("/") : document.URL.lastIndexOf("\\");
if( document.URL.substring(lastSlashPos + 1, lastSlashPos + 4).toLowerCase() != "~hh" )
{
 if (document.all) setTimeout(function() {nsrInit();},20); 
    else nsrInit();
 } 

if ((!parent.hmNavigationFrame) && (parent.location) && (parent.location.href)) { $('.sync-toc').show();$('p.crumbs').hide();}

</script>
</body>
</html>








